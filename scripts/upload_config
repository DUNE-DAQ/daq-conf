#!/usr/bin/env python3

import requests
from rich.console import Console
import json
import rich.traceback
from pathlib import Path
import click
from daqconf.core.upload_conf import get_json_recursive

# Add -h as default help option
CONTEXT_SETTINGS = dict(help_option_names=['-h', '--help'])

console = Console()
@click.command(context_settings=CONTEXT_SETTINGS)
@click.option('--url', default='np04-srv-010.cern.ch:31011', help='Where the configuration utility lives')
@click.option('--name', default=None, help='What name for the configuration')
@click.argument('json_dir', type=click.Path(exists=True))

def cli(url, name, json_dir):
    
    conf_data = get_json_recursive(Path(json_dir))
    
    header = {
        'Accept' : 'application/json',
        'Content-Type':'application/json'
    }

    name = name if name else (str(json_dir)).replace('/', '')
    console.log(f'Attempting to add the configuration {name} to the configuration database.')
    response = requests.post(
        'http://'+url+'/create?collection='+name,
        headers=header,
        data=json.dumps(conf_data)
    )
    resp_data = response.json()
    
    if not resp_data['success']:
        raise RuntimeError(f'Couldn\'t upload your configuration: {resp_data["error"]}')
    docid=resp_data['docid']
    version=resp_data['version']
    coll_name=resp_data['coll_name']
    console.log(f"daqconfig '{name}' v{version} uploaded (docid: {docid})")


if __name__ == '__main__':
    try:
        cli(show_default=True, standalone_mode=True)
    except Exception as e:
        console.print_exception()
